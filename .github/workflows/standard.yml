name: Standard Build/Test CI
on: push
jobs:

  test-for-java:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set-up Environment
      uses: actions/setup-java@v1
      with:
        java-version: 22

    - name: Compile Exevalator
      run: javac Exevalator.java
      working-directory: ./java

    - name: Compile Example Code
      run: |
        javac Example1.java
        javac Example2.java
        javac Example3.java
        javac Example4.java
        javac Example5.java
      working-directory: ./java

    - name: Run Example Code
      run: |
        java Example1
        java Example2
        java Example3
        java Example4
        java Example5
      working-directory: ./java

    - name: Compile Test Code
      run: javac Test.java
      working-directory: ./java

    - name: Run Test Code
      run: java Test
      working-directory: ./java



  test-for-cpp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set-up Environment
      run: |
        sudo apt-get update
        sudo apt-get install clang

    - name: Compile Example Code
      run: |
        clang++ -std=c++2b -Wall -o example1 example1.cpp
        clang++ -std=c++2b -Wall -o example2 example2.cpp
        clang++ -std=c++2b -Wall -o example3 example3.cpp
        clang++ -std=c++2b -Wall -o example4 example4.cpp
        clang++ -std=c++2b -Wall -o example5 example5.cpp
      working-directory: ./cpp

    - name: Run Example Code
      run: |
        ./example1
        ./example2
        ./example3
        ./example4
        ./example5
      working-directory: ./cpp

    - name: Compile Test Code
      run: clang++ -std=c++2b -Wall -o test test.cpp
      working-directory: ./cpp

    - name: Run Test Code
      run: ./test
      working-directory: ./cpp



  test-for-for-rust:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set-up Environment
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Compile Example Code
      run: |
        rustc example1.rs
        rustc example2.rs
        rustc example3.rs
        rustc example4.rs
        rustc example5.rs
      working-directory: ./rust

    - name: Run Example Code
      run: |
        ./example1
        ./example2
        ./example3
        ./example4
        ./example5
      working-directory: ./rust

    - name: Compile Test Code
      run: rustc test.rs
      working-directory: ./rust

    - name: Run Test Code
      run: ./test
      working-directory: ./rust


  test-for-csharp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Run Example Code
      run: |
        dotnet new console -n Examples
        sed -i -e "s@<TargetFramework>.*</TargetFramework>@<TargetFramework>net7.0</TargetFramework>@g" ./Examples/Examples.csproj
        cp ./Exevalator.cs ./Examples/Exevalator.cs
        cp -f ./Example1.cs ./Examples/Program.cs
        dotnet run --project ./Examples
        cp -f ./Example2.cs ./Examples/Program.cs
        dotnet run --project ./Examples
        cp -f ./Example3.cs ./Examples/Program.cs
        dotnet run --project ./Examples
        cp -f ./Example4.cs ./Examples/Program.cs
        dotnet run --project ./Examples
        cp -f ./Example5.cs ./Examples/Program.cs
        dotnet run --project ./Examples
      working-directory: ./csharp

    - name: Run Test Code
      run: |
        dotnet new console -n Test
        sed -i -e "s@<TargetFramework>.*</TargetFramework>@<TargetFramework>net7.0</TargetFramework>@g" ./Test/Test.csproj
        cp ./Exevalator.cs ./Test/Exevalator.cs
        cp -f ./Test.cs ./Test/Program.cs
        dotnet run --project ./Test
      working-directory: ./csharp


  test-for-visual-basic:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Run Example Code
      run: |
        dotnet new console -n Examples --language VB
        sed -i -e "s@<TargetFramework>.*</TargetFramework>@<TargetFramework>net7.0</TargetFramework>@g" ./Examples/Examples.vbproj
        cp ./Exevalator.vb ./Examples/Exevalator.vb
        cp -f ./Example1.vb ./Examples/Program.vb
        sed -i -e "s@Imports Rinearn\.ExevalatorVB@Imports Examples\.Rinearn\.ExevalatorVB@g" ./Examples/Program.vb
        dotnet run --project ./Examples
        cp -f ./Example2.vb ./Examples/Program.vb
        sed -i -e "s@Imports Rinearn\.ExevalatorVB@Imports Examples\.Rinearn\.ExevalatorVB@g" ./Examples/Program.vb
        dotnet run --project ./Examples
        cp -f ./Example3.vb ./Examples/Program.vb
        sed -i -e "s@Imports Rinearn\.ExevalatorVB@Imports Examples\.Rinearn\.ExevalatorVB@g" ./Examples/Program.vb
        dotnet run --project ./Examples
        cp -f ./Example4.vb ./Examples/Program.vb
        sed -i -e "s@Imports Rinearn\.ExevalatorVB@Imports Examples\.Rinearn\.ExevalatorVB@g" ./Examples/Program.vb
        dotnet run --project ./Examples
        cp -f ./Example5.vb ./Examples/Program.vb
        sed -i -e "s@Imports Rinearn\.ExevalatorVB@Imports Examples\.Rinearn\.ExevalatorVB@g" ./Examples/Program.vb
        dotnet run --project ./Examples
      working-directory: ./vb

    - name: Run Test Code
      run: |
        dotnet new console -n Test --language VB
        sed -i -e "s@<TargetFramework>.*</TargetFramework>@<TargetFramework>net7.0</TargetFramework>@g" ./Test/Test.vbproj
        cp ./Exevalator.vb ./Test/Exevalator.vb
        cp -f ./Test.vb ./Test/Program.vb
        sed -i -e "s@Imports Rinearn\.ExevalatorVB@Imports Test\.Rinearn\.ExevalatorVB@g" ./Test/Program.vb
        dotnet run --project ./Test
      working-directory: ./vb


